- name: Create ZED SDK directory inside {{ data_dir }}
  ansible.builtin.file:
    path: "{{ data_dir }}/zed-sdk"
    mode: "755"
    state: directory

# Download Debian package for x86_64 architecture
- name: Download the ZED SDK Debian package for x86_64 architecture
  when: ansible_architecture == "x86_64"
  ansible.builtin.get_url:
    url: "https://github.com/jerry73204/zed-sdk-debian-package/releases/download/4.2-1/zed-sdk_4.2-1_amd64.deb"
    dest: "{{ data_dir }}/zed-sdk/zed-sdk_4.2-1_amd64.deb"
    mode: "644"

# Install Debian package for x86_64 architecture
- name: Install ZED SDK Debian package for x86_64 architecture
  when: ansible_architecture == "x86_64"
  become: true
  ansible.builtin.apt:
    deb: "{{ data_dir }}/zed-sdk/zed-sdk_4.2-1_amd64.deb"
    state: present

# Download Debian package for ARM64 architecture
- name: Download the ZED SDK Debian package for ARM64 architecture
  when: ansible_architecture == "aarch64"
  ansible.builtin.get_url:
    url: "https://github.com/jerry73204/zed-sdk-debian-package/releases/download/4.2-1/zed-sdk_4.2-1_arm64.deb"
    dest: "{{ data_dir }}/zed-sdk/zed-sdk_4.2-1_arm64.deb"
    mode: "644"

# Install Debian package for ARM64 architecture
- name: Install ZED SDK Debian package for ARM64 architecture
  when: ansible_architecture == "aarch64"
  become: true
  ansible.builtin.apt:
    deb: "{{ data_dir }}/zed-sdk/zed-sdk_4.2-1_arm64.deb"
    state: present

# Download AI models for both architectures
- name: Download ZED AI models
  become: true
  ansible.builtin.command:
    cmd: zed_download_ai_models
  register: zed_ai_models_result
  changed_when: zed_ai_models_result.rc == 0
  failed_when: zed_ai_models_result.rc != 0

# Fix permissions on the ZED SDK directory if it exists
- name: Check if ZED SDK directory exists
  ansible.builtin.stat:
    path: "/usr/local/zed"
  register: zed_dir_exists
